var Ax = require("../src/animaxe");
var helper = require("../src/helper");
var Parameter = require("../src/parameter");
var animator = helper.getExampleAnimator();
// fixed base color for particles
var red = 255, green = 50, blue = 50;
// alpha fades out to make the particles evaporate over time
var alpha = Parameter.t().map(function (t) { return 0.1 / (t * 5 + 0.1); });
// our base particle is of variable size and color
function permDot(size, css_color) {
    return Ax.fillStyle(css_color).fillRect([-size / 2, -size / 2], [size, size]);
}
// each frame, first draw black background to erase the previous contents
animator.play(Ax.fillStyle("#000000").fillRect([0, 0], [100, 100]));
// a ring of exploding particles that fade our
animator.play(Ax
    .globalCompositeOperation("lighter") // use additive blending
    .clone(500, Ax // clone 500 particles
    .translate([50, 50]) // move to center of canvas
    .velocity(Parameter.rndNormal(50).first()) // choose a random direction
    .parallel([
    permDot(1, Parameter.rgba(red, green, blue, alpha)),
    permDot(5, Parameter.rgba(red, green, blue, alpha)) // with a dimmer surround
])));
helper.playExample("example3", 15, animator, 100, 100);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4YW1wbGVzL2V4YW1wbGUzLnRzIl0sIm5hbWVzIjpbInBlcm1Eb3QiXSwibWFwcGluZ3MiOiJBQUNBLElBQVksRUFBRSxXQUFNLGdCQUFnQixDQUFDLENBQUE7QUFDckMsSUFBWSxNQUFNLFdBQU0sZUFBZSxDQUFDLENBQUE7QUFFeEMsSUFBWSxTQUFTLFdBQU0sa0JBQWtCLENBQUMsQ0FBQTtBQUU5QyxJQUFJLFFBQVEsR0FBZ0IsTUFBTSxDQUFDLGtCQUFrQixFQUFFLENBQUM7QUFFeEQsaUNBQWlDO0FBQ2pDLElBQUksR0FBRyxHQUFHLEdBQUcsRUFBRSxLQUFLLEdBQUcsRUFBRSxFQUFFLElBQUksR0FBRyxFQUFFLENBQUM7QUFDckMsNERBQTREO0FBQzVELElBQUksS0FBSyxHQUFHLFNBQVMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxHQUFHLEdBQUcsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxFQUFqQixDQUFpQixDQUFDLENBQUM7QUFFdEQsa0RBQWtEO0FBQ2xELGlCQUFpQixJQUFZLEVBQUUsU0FBc0I7SUFDakRBLE1BQU1BLENBQUNBLEVBQUVBLENBQUNBLFNBQVNBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBLFFBQVFBLENBQUNBLENBQUNBLENBQUNBLElBQUlBLEdBQUNBLENBQUNBLEVBQUVBLENBQUNBLElBQUlBLEdBQUNBLENBQUNBLENBQUNBLEVBQUVBLENBQUNBLElBQUlBLEVBQUVBLElBQUlBLENBQUNBLENBQUNBLENBQUNBO0FBQzlFQSxDQUFDQTtBQUVELHlFQUF5RTtBQUN6RSxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsR0FBRyxFQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNqRSw4Q0FBOEM7QUFDOUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFO0tBQ1gsd0JBQXdCLENBQUMsU0FBUyxDQUFDLENBQTBCLHdCQUF3QjtLQUNyRixLQUFLLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBZ0Qsc0JBQXNCO0tBQy9FLFNBQVMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFzQywyQkFBMkI7S0FDcEYsUUFBUSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBZ0IsNEJBQTRCO0tBQ3JGLFFBQVEsQ0FBQztJQUNOLE9BQU8sQ0FBQyxDQUFDLEVBQUUsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNuRCxPQUFPLENBQUMsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBRyx5QkFBeUI7Q0FDbEYsQ0FBQyxDQUNMLENBQ0osQ0FBQztBQUVGLE1BQU0sQ0FBQyxXQUFXLENBQUMsVUFBVSxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDIiwiZmlsZSI6ImV4YW1wbGVzL2V4YW1wbGUzLmpzIiwic291cmNlc0NvbnRlbnQiOltudWxsXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
