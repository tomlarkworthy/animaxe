var Ax = require("../src/animaxe");
var helper = require("../src/helper");
var Parameter = require("../src/parameter");
var animator = helper.getExampleAnimator();
//a line between two points of a specified thickness and color (which are temporally varying parameters)
function thickLine1tick(thickness, start, end, css_color) {
    return Ax
        .take(1)
        .strokeStyle(css_color)
        .withinPath(Ax
        .lineWidth(thickness)
        .moveTo(start)
        .lineTo(end))
        .stroke();
}
/**
 * Three frame animation of a thinning line. Animations are displaced in time so even if the start and end streams move
 * The line doesn't
 */
function sparkLine(start, end, css_color) {
    return thickLine1tick(6, //thick line
    start, end, css_color)
        .then(thickLine1tick(2, //medium line
    Parameter.displaceT(-0.1, start), Parameter.displaceT(-0.1, end), css_color))
        .then(thickLine1tick(1, //thin line
    Parameter.displaceT(-0.2, start), Parameter.displaceT(-0.2, end), css_color));
}
//large circle funcitons
var bigSin = Parameter.sin(1).map(function (x) { return x * 40 + 50; });
var bigCos = Parameter.cos(1).map(function (x) { return x * 40 + 50; });
//periodic color
var red = 255;
var green = Parameter.sin(2).map(function (x) { return x * 100 + 55; });
var blue = 50;
//each frame, first draw black background to erase the previous contents
animator.play(Ax.fillStyle("#000000").fillRect([0, 0], [100, 100]));
animator.play(Ax.emit(sparkLine(Parameter.point(bigSin, bigCos), Parameter.displaceT(-0.1, Parameter.point(bigSin, bigCos)), Parameter.rgba(red, green, blue, 1))));
helper.playExample("example2", 20, animator, 100, 100);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4YW1wbGVzL2V4YW1wbGUyLnRzIl0sIm5hbWVzIjpbInRoaWNrTGluZTF0aWNrIiwic3BhcmtMaW5lIl0sIm1hcHBpbmdzIjoiQUFDQSxJQUFZLEVBQUUsV0FBTSxnQkFBZ0IsQ0FBQyxDQUFBO0FBQ3JDLElBQVksTUFBTSxXQUFNLGVBQWUsQ0FBQyxDQUFBO0FBRXhDLElBQVksU0FBUyxXQUFNLGtCQUFrQixDQUFDLENBQUE7QUFFOUMsSUFBSSxRQUFRLEdBQWdCLE1BQU0sQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO0FBRXhELHdHQUF3RztBQUN4Ryx3QkFDSSxTQUFpQixFQUNqQixLQUFrQixFQUNsQixHQUFnQixFQUNoQixTQUErQjtJQUUvQkEsTUFBTUEsQ0FBQ0EsRUFBRUE7U0FDSkEsSUFBSUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7U0FDUEEsV0FBV0EsQ0FBQ0EsU0FBU0EsQ0FBQ0E7U0FDdEJBLFVBQVVBLENBQUNBLEVBQUVBO1NBQ1RBLFNBQVNBLENBQUNBLFNBQVNBLENBQUNBO1NBQ3BCQSxNQUFNQSxDQUFDQSxLQUFLQSxDQUFDQTtTQUNiQSxNQUFNQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUNmQTtTQUNBQSxNQUFNQSxFQUFFQSxDQUFDQTtBQUNsQkEsQ0FBQ0E7QUFFRDs7O0dBR0c7QUFDSCxtQkFBbUIsS0FBa0IsRUFBRSxHQUFnQixFQUFFLFNBQXNCO0lBQzNFQyxNQUFNQSxDQUFDQSxjQUFjQSxDQUFDQSxDQUFDQSxFQUFFQSxZQUFZQTtJQUM3QkEsS0FBS0EsRUFDTEEsR0FBR0EsRUFBRUEsU0FBU0EsQ0FBQ0E7U0FDbEJBLElBQUlBLENBQUNBLGNBQWNBLENBQUNBLENBQUNBLEVBQUVBLGFBQWFBO0lBQ2pDQSxTQUFTQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFDQSxHQUFHQSxFQUFFQSxLQUFLQSxDQUFDQSxFQUNoQ0EsU0FBU0EsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsRUFBRUEsR0FBR0EsQ0FBQ0EsRUFDOUJBLFNBQVNBLENBQUNBLENBQUNBO1NBQ2RBLElBQUlBLENBQUNBLGNBQWNBLENBQUNBLENBQUNBLEVBQUVBLFdBQVdBO0lBQy9CQSxTQUFTQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFDQSxHQUFHQSxFQUFFQSxLQUFLQSxDQUFDQSxFQUNoQ0EsU0FBU0EsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsRUFBRUEsR0FBR0EsQ0FBQ0EsRUFDOUJBLFNBQVNBLENBQUNBLENBQUNBLENBQUNBO0FBQ3hCQSxDQUFDQTtBQUVELHdCQUF3QjtBQUN4QixJQUFJLE1BQU0sR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxFQUFYLENBQVcsQ0FBQyxDQUFDO0FBQ3BELElBQUksTUFBTSxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQVgsQ0FBVyxDQUFDLENBQUM7QUFFcEQsZ0JBQWdCO0FBQ2hCLElBQUksR0FBRyxHQUFLLEdBQUcsQ0FBQztBQUNoQixJQUFJLEtBQUssR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsR0FBRyxHQUFHLEdBQUcsRUFBRSxFQUFaLENBQVksQ0FBQyxDQUFDO0FBQ3BELElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQztBQUVkLHdFQUF3RTtBQUN4RSxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsR0FBRyxFQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUVqRSxRQUFRLENBQUMsSUFBSSxDQUNULEVBQUUsQ0FBQyxJQUFJLENBQ0gsU0FBUyxDQUNMLFNBQVMsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFDLE1BQU0sQ0FBQyxFQUM5QixTQUFTLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxFQUFFLFNBQVMsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQ3pELFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFDLEtBQUssRUFBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDLENBQ25DLENBQ0osQ0FDSixDQUFDO0FBRUYsTUFBTSxDQUFDLFdBQVcsQ0FBQyxVQUFVLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMiLCJmaWxlIjoiZXhhbXBsZXMvZXhhbXBsZTIuanMiLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
