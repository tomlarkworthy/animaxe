// THIS IS AUTO GENERATED TEST CODE, DO NOT MODIFY DIRECTLY
/// <reference path="../types/should.d.ts" />
/// <reference path="../types/mocha.d.ts" />
/// <reference path="../types/node.d.ts" />
require('source-map-support').install();
require("should");
var Ax = require("../src/animaxe");
var helper = require("../src/helper");
var svg = require("../src/svg");
var animator = helper.getExampleAnimator(100, 100);
var cases = [
    'M10 20 A15 15 0 0 0 30 20',
    'M40 20 A15 15 0 0 1 60 20',
    'M70 20 A15 15 0 1 0 90 20',
    'M10 50 A15 15 0 1 1 30 50',
    'M50 40 A15 15 0 0 0 50 60',
    'M80 40 A15 15 0 0 1 80 60',
    'M20 70 A15 15 0 1 0 20 90',
    'M50 70 A15 15 0 1 1 50 90',
    'M80 70 A5 5 0 1 1 80 90',
];
for (var i = 0; i < cases.length; i++) {
    animator.play(svg.svgpath(Ax.create().beginPath().strokeStyle("red"), cases[i]).stroke());
}
helper.playExample("elliptical", 1, animator, 100, 100);
describe('elliptical', function () {
    it('should match the reference', function (done) {
        helper.sameExample("elliptical", "elliptical-ref", function (equal) {
            equal.should.equal(true);
            done();
        });
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4YW1wbGUudGVtcGxhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkRBQTJEO0FBQzNELDZDQUE2QztBQUM3Qyw0Q0FBNEM7QUFDNUMsMkNBQTJDO0FBQzNDLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQ3hDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUlsQixJQUFZLEVBQUUsV0FBTSxnQkFBZ0IsQ0FBQyxDQUFBO0FBQ3JDLElBQVksTUFBTSxXQUFNLGVBQWUsQ0FBQyxDQUFBO0FBR3hDLElBQVksR0FBRyxXQUFNLFlBQVksQ0FBQyxDQUFBO0FBRWxDLElBQUksUUFBUSxHQUFnQixNQUFNLENBQUMsa0JBQWtCLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBRWhFLElBQUksS0FBSyxHQUFHO0lBQ1IsMkJBQTJCO0lBQzNCLDJCQUEyQjtJQUMzQiwyQkFBMkI7SUFDM0IsMkJBQTJCO0lBRTNCLDJCQUEyQjtJQUMzQiwyQkFBMkI7SUFDM0IsMkJBQTJCO0lBQzNCLDJCQUEyQjtJQUUzQix5QkFBeUI7Q0FDNUIsQ0FBQztBQUNGLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7SUFDcEMsUUFBUSxDQUFDLElBQUksQ0FDVCxHQUFHLENBQUMsT0FBTyxDQUNQLEVBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLEVBQzFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FDWCxDQUFDLE1BQU0sRUFBRSxDQUNiLENBQUM7QUFDTixDQUFDO0FBR0QsTUFBTSxDQUFDLFdBQVcsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFFeEQsUUFBUSxDQUFDLFlBQVksRUFBRTtJQUNuQixFQUFFLENBQUUsNEJBQTRCLEVBQUUsVUFBUyxJQUFJO1FBQzNDLE1BQU0sQ0FBQyxXQUFXLENBQUMsWUFBWSxFQUFFLGdCQUFnQixFQUFFLFVBQVMsS0FBSztZQUM3RCxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN6QixJQUFJLEVBQUUsQ0FBQztRQUNYLENBQUMsQ0FBQyxDQUFBO0lBQ04sQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJkaXN0L3Rlc3QvZWxsaXB0aWNhbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRISVMgSVMgQVVUTyBHRU5FUkFURUQgVEVTVCBDT0RFLCBETyBOT1QgTU9ESUZZIERJUkVDVExZXG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi4vdHlwZXMvc2hvdWxkLmQudHNcIiAvPlxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4uL3R5cGVzL21vY2hhLmQudHNcIiAvPlxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4uL3R5cGVzL25vZGUuZC50c1wiIC8+XG5yZXF1aXJlKCdzb3VyY2UtbWFwLXN1cHBvcnQnKS5pbnN0YWxsKCk7XG5yZXF1aXJlKFwic2hvdWxkXCIpO1xuXG5cbmltcG9ydCAqIGFzIFJ4IGZyb20gXCJyeFwiO1xuaW1wb3J0ICogYXMgQXggZnJvbSBcIi4uL3NyYy9hbmltYXhlXCI7XG5pbXBvcnQgKiBhcyBoZWxwZXIgZnJvbSBcIi4uL3NyYy9oZWxwZXJcIjtcbmltcG9ydCAqIGFzIGV2ZW50cyBmcm9tIFwiLi4vc3JjL2V2ZW50c1wiO1xuaW1wb3J0ICogYXMgUGFyYW1ldGVyIGZyb20gXCIuLi9zcmMvUGFyYW1ldGVyXCI7XG5pbXBvcnQgKiBhcyBzdmcgZnJvbSBcIi4uL3NyYy9zdmdcIjtcblxudmFyIGFuaW1hdG9yOiBBeC5BbmltYXRvciA9IGhlbHBlci5nZXRFeGFtcGxlQW5pbWF0b3IoMTAwLCAxMDApO1xuXG52YXIgY2FzZXMgPSBbXG4gICAgJ00xMCAyMCBBMTUgMTUgMCAwIDAgMzAgMjAnLCAvLyBjaGVja2VkIGFnYWluc3QgU1ZHIGJlaGF2aW91clxuICAgICdNNDAgMjAgQTE1IDE1IDAgMCAxIDYwIDIwJywgLy8gY2hlY2tlZCBhZ2FpbnN0IFNWRyBiZWhhdmlvdXJcbiAgICAnTTcwIDIwIEExNSAxNSAwIDEgMCA5MCAyMCcsIC8vIGNoZWNrZWQgYWdhaW5zdCBTVkcgYmVoYXZpb3VyXG4gICAgJ00xMCA1MCBBMTUgMTUgMCAxIDEgMzAgNTAnLCAvLyBjaGVja2VkIGFnYWluc3QgU1ZHIGJlaGF2aW91clxuICAgIFxuICAgICdNNTAgNDAgQTE1IDE1IDAgMCAwIDUwIDYwJywgLy8gY2hlY2tlZCBhZ2FpbnN0IFNWRyBiZWhhdmlvdXJcbiAgICAnTTgwIDQwIEExNSAxNSAwIDAgMSA4MCA2MCcsIC8vIGNoZWNrZWQgYWdhaW5zdCBTVkcgYmVoYXZpb3VyXG4gICAgJ00yMCA3MCBBMTUgMTUgMCAxIDAgMjAgOTAnLCAvLyBjaGVja2VkIGFnYWluc3QgU1ZHIGJlaGF2aW91clxuICAgICdNNTAgNzAgQTE1IDE1IDAgMSAxIDUwIDkwJywgLy8gY2hlY2tlZCBhZ2FpbnN0IFNWRyBiZWhhdmlvdXJcbiAgICBcbiAgICAnTTgwIDcwIEE1IDUgMCAxIDEgODAgOTAnLFxuXTtcbmZvciAodmFyIGkgPSAwOyBpIDwgY2FzZXMubGVuZ3RoOyBpKyspIHtcbiAgICBhbmltYXRvci5wbGF5KFxuICAgICAgICBzdmcuc3ZncGF0aChcbiAgICAgICAgICAgIEF4LmNyZWF0ZSgpLmJlZ2luUGF0aCgpLnN0cm9rZVN0eWxlKFwicmVkXCIpLFxuICAgICAgICAgICAgY2FzZXNbaV1cbiAgICAgICAgKS5zdHJva2UoKVxuICAgICk7ICAgXG59XG5cbiBcbmhlbHBlci5wbGF5RXhhbXBsZShcImVsbGlwdGljYWxcIiwgMSwgYW5pbWF0b3IsIDEwMCwgMTAwKTtcblxuZGVzY3JpYmUoJ2VsbGlwdGljYWwnLCBmdW5jdGlvbiAoKSB7XG4gICAgaXQgKCdzaG91bGQgbWF0Y2ggdGhlIHJlZmVyZW5jZScsIGZ1bmN0aW9uKGRvbmUpIHtcbiAgICAgICAgaGVscGVyLnNhbWVFeGFtcGxlKFwiZWxsaXB0aWNhbFwiLCBcImVsbGlwdGljYWwtcmVmXCIsIGZ1bmN0aW9uKGVxdWFsKSB7XG4gICAgICAgICAgICBlcXVhbC5zaG91bGQuZXF1YWwodHJ1ZSk7XG4gICAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pXG4gICAgfSk7XG59KTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
