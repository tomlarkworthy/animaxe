// THIS IS AUTO GENERATED TEST CODE, DO NOT MODIFY DIRECTLY
/// <reference path="../types/should.d.ts" />
/// <reference path="../types/mocha.d.ts" />
/// <reference path="../types/node.d.ts" />
require('source-map-support').install();
require("should");
var Ax = require("../src/animaxe");
var helper = require("../src/helper");
var Parameter = require("../src/Parameter");
var animator = helper.getExampleAnimator();
Ax.DEBUG = true;
//2 frame animated glow
function spark(color) {
    return Ax.create()
        .take(1)
        .fillStyle(color)
        .fillRect([-2, -2], [5, 5])
        .then(Ax.create()
        .take(1)
        .fillStyle(color)
        .fillRect([-1, -1], [3, 3]));
}
//large circle funcitons
var bigSin = Parameter.sin(Parameter.t().map(function (x) { return x * Math.PI * 2; })).map(function (x) { return x * 40 + 50; });
var bigCos = Parameter.cos(Parameter.t().map(function (x) { return x * Math.PI * 2; })).map(function (x) { return x * 40 + 50; });
var red = Parameter.sin(Parameter.t().map(function (x) { return x * Math.PI; })).map(function (x) { return x * 125 + 125; });
var green = Parameter.sin(Parameter.t().map(function (x) { return x * Math.PI; })).map(function (x) { return x * 55 + 200; });
//each frame, first draw black background to erase the previous contents
animator.play(Ax.create().fillStyle("#000000").fillRect([0, 0], [100, 100]));
// move the drawing context frame of reference to the center (50,50) and then move it by a +ve x velocity,
// so the frame of reference moves over time.
// then draw our 2 frame spark animation in a loop so it draws forever
animator.play(Ax.create()
    .translate([50, 50])
    .velocity([50, 0])
    .loop(spark("#FFFFFF")));
// move the draw context to a coordinate determined by trig (i.e. in a circle)
animator.play(Ax.create()
    .loop(Ax.create()
    .translate(Parameter.point(bigSin, bigCos))
    .pipe(spark(Parameter.rgba(red, green, 0, 1)))));
// tween between the center (50,50) and a point on a circle. This has the effect of moving the inner spark animation
// in a archimedes spiral.
animator.play(Ax.create()
    .tween_linear([50, 50], Parameter.point(bigSin, bigCos), 1)
    .loop(spark("red")));
// the helper function pipes injects the context, either from a web canvas or a fake node.js one.
helper.playExample("example1", 20, animator, 100, 100);
describe('example1', function () {
    it('should match the reference', function (done) {
        helper.sameExample("example1", "example1-ref", function (equal) {
            equal.should.equal(true);
            done();
        });
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4YW1wbGUudGVtcGxhdGUudHMiXSwibmFtZXMiOlsic3BhcmsiXSwibWFwcGluZ3MiOiJBQUFBLDJEQUEyRDtBQUMzRCw2Q0FBNkM7QUFDN0MsNENBQTRDO0FBQzVDLDJDQUEyQztBQUMzQyxPQUFPLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUN4QyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFHbEIsSUFBWSxFQUFFLFdBQU0sZ0JBQWdCLENBQUMsQ0FBQTtBQUNyQyxJQUFZLE1BQU0sV0FBTSxlQUFlLENBQUMsQ0FBQTtBQUV4QyxJQUFZLFNBQVMsV0FBTSxrQkFBa0IsQ0FBQyxDQUFBO0FBRTlDLElBQUksUUFBUSxHQUFnQixNQUFNLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztBQUV4RCxFQUFFLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztBQUNoQix1QkFBdUI7QUFDdkIsZUFBZSxLQUFrQjtJQUM3QkEsTUFBTUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsTUFBTUEsRUFBRUE7U0FDYkEsSUFBSUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7U0FDUEEsU0FBU0EsQ0FBQ0EsS0FBS0EsQ0FBQ0E7U0FDaEJBLFFBQVFBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLEVBQUNBLENBQUNBLENBQUNBLENBQUNBO1NBQ3pCQSxJQUFJQSxDQUFDQSxFQUFFQSxDQUFDQSxNQUFNQSxFQUFFQTtTQUNaQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQTtTQUNQQSxTQUFTQSxDQUFDQSxLQUFLQSxDQUFDQTtTQUNoQkEsUUFBUUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsRUFBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FDN0JBLENBQUNBO0FBQ1ZBLENBQUNBO0FBQ0Qsd0JBQXdCO0FBQ3hCLElBQUksTUFBTSxH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QyxXQUFXLENBQUMsVUFBVSxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBRXZELFFBQVEsQ0FBQyxVQUFVLEVBQUU7SUFDakIsRUFBRSxDQUFFLDRCQUE0QixFQUFFLFVBQVMsSUFBSTtRQUMzQyxNQUFNLENBQUMsV0FBVyxDQUFDLFVBQVUsRUFBRSxjQUFjLEVBQUUsVUFBUyxLQUFLO1lBQ3pELEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3pCLElBQUksRUFBRSxDQUFDO1FBQ1gsQ0FBQyxDQUFDLENBQUE7SUFDTixDQUFDLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6ImRpc3QvdGVzdC9leGFtcGxlMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRISVMgSVMgQVVUTyBHRU5FUkFURUQgVEVTVCBDT0RFLCBETyBOT1QgTU9ESUZZIERJUkVDVExZXG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi4vdHlwZXMvc2hvdWxkLmQudHNcIiAvPlxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4uL3R5cGVzL21vY2hhLmQudHNcIiAvPlxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4uL3R5cGVzL25vZGUuZC50c1wiIC8+XG5yZXF1aXJlKCdzb3VyY2UtbWFwLXN1cHBvcnQnKS5pbnN0YWxsKCk7XG5yZXF1aXJlKFwic2hvdWxkXCIpO1xuXG5pbXBvcnQgKiBhcyBSeCBmcm9tIFwicnhcIjtcbmltcG9ydCAqIGFzIEF4IGZyb20gXCIuLi9zcmMvYW5pbWF4ZVwiO1xuaW1wb3J0ICogYXMgaGVscGVyIGZyb20gXCIuLi9zcmMvaGVscGVyXCI7XG5pbXBvcnQgKiBhcyBldmVudHMgZnJvbSBcIi4uL3NyYy9ldmVudHNcIjtcbmltcG9ydCAqIGFzIFBhcmFtZXRlciBmcm9tIFwiLi4vc3JjL1BhcmFtZXRlclwiO1xuXG52YXIgYW5pbWF0b3I6IEF4LkFuaW1hdG9yID0gaGVscGVyLmdldEV4YW1wbGVBbmltYXRvcigpO1xuXG5BeC5ERUJVRyA9IHRydWU7XG4vLzIgZnJhbWUgYW5pbWF0ZWQgZ2xvd1xuZnVuY3Rpb24gc3BhcmsoY29sb3I6IEF4LkNvbG9yQXJnKTogQXguQW5pbWF0aW9uIHsgLy93ZSBjb3VsZCBiZSBjbGV2ZXIgYW5kIGxldCBzcGFyayB0YWtlIGEgc2VxLCBidXQgdXNlciBmdW5jdGlvbnMgc2hvdWxkIGJlIHNpbXBsZVxuICAgIHJldHVybiBBeC5jcmVhdGUoKVxuICAgICAgICAudGFrZSgxKVxuICAgICAgICAuZmlsbFN0eWxlKGNvbG9yKVxuICAgICAgICAuZmlsbFJlY3QoWy0yLCAtMl0sIFs1LDVdKVxuICAgICAgICAudGhlbihBeC5jcmVhdGUoKVxuICAgICAgICAgICAgLnRha2UoMSlcbiAgICAgICAgICAgIC5maWxsU3R5bGUoY29sb3IpXG4gICAgICAgICAgICAuZmlsbFJlY3QoWy0xLCAtMV0sIFszLDNdKVxuICAgICAgICApO1xufVxuLy9sYXJnZSBjaXJjbGUgZnVuY2l0b25zXG52YXIgYmlnU2luID0gUGFyYW1ldGVyLnNpbihQYXJhbWV0ZXIudCgpLm1hcCh4PT54ICogTWF0aC5QSSAqIDIpKS5tYXAoeCA9PiB4ICogNDAgKyA1MCk7XG52YXIgYmlnQ29zID0gUGFyYW1ldGVyLmNvcyhQYXJhbWV0ZXIudCgpLm1hcCh4PT54ICogTWF0aC5QSSAqIDIpKS5tYXAoeCA9PiB4ICogNDAgKyA1MCk7XG5cbnZhciByZWQgICA9IFBhcmFtZXRlci5zaW4oUGFyYW1ldGVyLnQoKS5tYXAoeD0+eCAqIE1hdGguUEkpKS5tYXAoeCA9PiB4ICogMTI1ICsgMTI1KTtcbnZhciBncmVlbiA9IFBhcmFtZXRlci5zaW4oUGFyYW1ldGVyLnQoKS5tYXAoeD0+eCAqIE1hdGguUEkpKS5tYXAoeCA9PiB4ICogNTUgKyAyMDApO1xuXG4vL2VhY2ggZnJhbWUsIGZpcnN0IGRyYXcgYmxhY2sgYmFja2dyb3VuZCB0byBlcmFzZSB0aGUgcHJldmlvdXMgY29udGVudHNcbmFuaW1hdG9yLnBsYXkoQXguY3JlYXRlKCkuZmlsbFN0eWxlKFwiIzAwMDAwMFwiKS5maWxsUmVjdChbMCwwXSxbMTAwLDEwMF0pKTtcblxuXG4vLyBtb3ZlIHRoZSBkcmF3aW5nIGNvbnRleHQgZnJhbWUgb2YgcmVmZXJlbmNlIHRvIHRoZSBjZW50ZXIgKDUwLDUwKSBhbmQgdGhlbiBtb3ZlIGl0IGJ5IGEgK3ZlIHggdmVsb2NpdHksXG4vLyBzbyB0aGUgZnJhbWUgb2YgcmVmZXJlbmNlIG1vdmVzIG92ZXIgdGltZS5cbi8vIHRoZW4gZHJhdyBvdXIgMiBmcmFtZSBzcGFyayBhbmltYXRpb24gaW4gYSBsb29wIHNvIGl0IGRyYXdzIGZvcmV2ZXJcbmFuaW1hdG9yLnBsYXkoQXguY3JlYXRlKClcbiAgICAudHJhbnNsYXRlKFs1MCw1MF0pXG4gICAgLnZlbG9jaXR5KFs1MCwwXSlcbiAgICAubG9vcChcbiAgICAgICAgc3BhcmsoXCIjRkZGRkZGXCIpXG4gICAgKVxuKTtcblxuLy8gbW92ZSB0aGUgZHJhdyBjb250ZXh0IHRvIGEgY29vcmRpbmF0ZSBkZXRlcm1pbmVkIGJ5IHRyaWcgKGkuZS4gaW4gYSBjaXJjbGUpXG5cbmFuaW1hdG9yLnBsYXkoQXguY3JlYXRlKClcbiAgICAubG9vcChBeC5jcmVhdGUoKVxuICAgICAgICAudHJhbnNsYXRlKFBhcmFtZXRlci5wb2ludChiaWdTaW4sIGJpZ0NvcykpXG4gICAgICAgIC5waXBlKFxuICAgICAgICAgICAgc3BhcmsoUGFyYW1ldGVyLnJnYmEocmVkLCBncmVlbiwgMCwgMSkpXG4gICAgICAgIClcbiAgICApXG4pO1xuXG4vLyB0d2VlbiBiZXR3ZWVuIHRoZSBjZW50ZXIgKDUwLDUwKSBhbmQgYSBwb2ludCBvbiBhIGNpcmNsZS4gVGhpcyBoYXMgdGhlIGVmZmVjdCBvZiBtb3ZpbmcgdGhlIGlubmVyIHNwYXJrIGFuaW1hdGlvblxuLy8gaW4gYSBhcmNoaW1lZGVzIHNwaXJhbC5cbmFuaW1hdG9yLnBsYXkoQXguY3JlYXRlKClcbiAgICAudHdlZW5fbGluZWFyKFs1MCw1MF0sIFBhcmFtZXRlci5wb2ludChiaWdTaW4sIGJpZ0NvcyksIDEpXG4gICAgLmxvb3AoXG4gICAgICAgIHNwYXJrKFwicmVkXCIpXG4gICAgKVxuKTtcbi8vIHRoZSBoZWxwZXIgZnVuY3Rpb24gcGlwZXMgaW5qZWN0cyB0aGUgY29udGV4dCwgZWl0aGVyIGZyb20gYSB3ZWIgY2FudmFzIG9yIGEgZmFrZSBub2RlLmpzIG9uZS5cbmhlbHBlci5wbGF5RXhhbXBsZShcImV4YW1wbGUxXCIsIDIwLCBhbmltYXRvciwgMTAwLCAxMDApO1xuXG5kZXNjcmliZSgnZXhhbXBsZTEnLCBmdW5jdGlvbiAoKSB7XG4gICAgaXQgKCdzaG91bGQgbWF0Y2ggdGhlIHJlZmVyZW5jZScsIGZ1bmN0aW9uKGRvbmUpIHtcbiAgICAgICAgaGVscGVyLnNhbWVFeGFtcGxlKFwiZXhhbXBsZTFcIiwgXCJleGFtcGxlMS1yZWZcIiwgZnVuY3Rpb24oZXF1YWwpIHtcbiAgICAgICAgICAgIGVxdWFsLnNob3VsZC5lcXVhbCh0cnVlKTtcbiAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSlcbiAgICB9KTtcbn0pOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
